(ns fluree.db.interface.constants
  (:require [fluree.db.constants :as const]))

(def data_version const/data_version)
(def $iri const/$iri)
(def $_tx const/$_tx)
(def $_predicate const/$_predicate)
(def $_collection const/$_collection)
(def $_shard const/$_shard)
(def $_tag const/$_tag)
(def $_fn const/$_fn)
(def $_user const/$_user)
(def $_auth const/$_auth)
(def $_role const/$_role)
(def $_rule const/$_rule)
(def $_setting const/$_setting)
(def $_prefix const/$_prefix)
(def $_default const/$_default)

(def $numSystemCollections const/$numSystemCollections)
(def $maxSystemPredicates const/$maxSystemPredicates)

(def $id const/$id)

(def $_block:hash const/$_block:hash)
(def $_block:prevHash const/$_block:prevHash)
(def $_block:transactions const/$_block:transactions)
(def $_block:ledgers const/$_block:ledgers)
(def $_block:instant const/$_block:instant)
(def $_block:number const/$_block:number)
(def $_block:sigs const/$_block:sigs)

(def $_predicate:name const/$_predicate:name)
(def $_predicate:doc const/$_predicate:doc)
(def $_predicate:type const/$_predicate:type)
(def $_predicate:unique const/$_predicate:unique)
(def $_predicate:multi const/$_predicate:multi)
(def $_predicate:index const/$_predicate:index)
(def $_predicate:upsert const/$_predicate:upsert)
(def $_predicate:component const/$_predicate:component)
(def $_predicate:noHistory const/$_predicate:noHistory)
(def $_predicate:restrictCollection const/$_predicate:restrictCollection)
(def $_predicate:spec const/$_predicate:spec)
(def $_predicate:encrypted const/$_predicate:encrypted)
(def $_predicate:deprecated const/$_predicate:deprecated)
(def $_predicate:specDoc const/$_predicate:specDoc)
(def $_predicate:txSpec const/$_predicate:txSpec)
(def $_predicate:txSpecDoc const/$_predicate:txSpecDoc)
(def $_predicate:restrictTag const/$_predicate:restrictTag)
(def $_predicate:fullText const/$_predicate:fullText)
(def $_predicate:equivalentProperty const/$_predicate:equivalentProperty)
(def $_predicate:retractDuplicates const/$_predicate:retractDuplicates)

(def $rdf:type const/$rdf:type)
(def $rdfs:subClassOf const/$rdfs:subClassOf)
(def $rdfs:subPropertyOf const/$rdfs:subPropertyOf)
(def $rdfs:Class const/$rdfs:Class)
(def $rdf:Property const/$rdf:Property)

(def $owl:Class const/$owl:Class)
(def $owl:ObjectProperty const/$owl:ObjectProperty)
(def $owl:DatatypeProperty const/$owl:DatatypeProperty)

(def $_tag:id const/$_tag:id)
(def $_tag:doc const/$_tag:doc)

(def $_collection:name const/$_collection:name)
(def $_collection:doc const/$_collection:doc)
(def $_collection:version const/$_collection:version)
(def $_collection:spec const/$_collection:spec)
(def $_collection:specDoc const/$_collection:specDoc)
(def $_collection:shard const/$_collection:shard)
(def $_collection:equivalentClass const/$_collection:equivalentClass)
(def $_collection:partition const/$_collection:partition)
(def $_collection:baseIRI const/$_collection:baseIRI)

(def $_user:username const/$_user:username)
(def $_user:auth const/$_user:auth)
(def $_user:roles const/$_user:roles)
(def $_user:doc const/$_user:doc)

(def $_auth:id const/$_auth:id)
(def $_auth:password const/$_auth:password)
(def $_auth:salt const/$_auth:salt)
(def $_auth:roles const/$_auth:roles)
(def $_auth:doc const/$_auth:doc)
(def $_auth:type const/$_auth:type)
(def $_auth:authority const/$_auth:authority)
(def $_auth:fuel const/$_auth:fuel)

(def $_role:id const/$_role:id)
(def $_role:doc const/$_role:doc)
(def $_role:rules const/$_role:rules)

(def $_rule:id const/$_rule:id)
(def $_rule:doc const/$_rule:doc)
(def $_rule:collection const/$_rule:collection)
(def $_rule:predicates const/$_rule:predicates)
(def $_rule:fns const/$_rule:fns)
(def $_rule:ops const/$_rule:ops)
(def $_rule:collectionDefault const/$_rule:collectionDefault)
(def $_rule:errorMessage const/$_rule:errorMessage)

(def $_fn:name const/$_fn:name)
(def $_fn:params const/$_fn:params)
(def $_fn:code const/$_fn:code)
(def $_fn:doc const/$_fn:doc)
(def $_fn:spec const/$_fn:spec)
(def $_fn:language const/$_fn:language)

(def $_tx:hash const/$_tx:hash)

(def $_tx:id const/$_tx:id)
(def $_tx:auth const/$_tx:auth)
(def $_tx:authority const/$_tx:authority)
(def $_tx:nonce const/$_tx:nonce)
(def $_tx:altId const/$_tx:altId)
(def $_tx:doc const/$_tx:doc)
(def $_tx:tx const/$_tx:tx)
(def $_tx:sig const/$_tx:sig)
(def $_tx:tempids const/$_tx:tempids)
(def $_tx:error const/$_tx:error)

(def $_setting:anonymous const/$_setting:anonymous)
(def $_setting:ledgers const/$_setting:ledgers)
(def $_setting:consensus const/$_setting:consensus)
(def $_setting:doc const/$_setting:doc)
(def $_setting:passwords const/$_setting:passwords)
(def $_setting:txMax const/$_setting:txMax)
(def $_setting:id const/$_setting:id)
(def $_setting:language const/$_setting:language)

(def $_shard:name const/$_shard:name)
(def $_shard:miners const/$_shard:miners)
(def $_shard:mutable const/$_shard:mutable)

(def $_prefix:prefix const/$_prefix:prefix)
(def $_prefix:iri const/$_prefix:iri)

(def $fluree:partition const/$fluree:partition)

(def $sh:path const/$sh:path)
(def $sh:datatype const/$sh:datatype)
(def $sh:pattern const/$sh:pattern)
(def $sh:minCount const/$sh:minCount)
(def $sh:maxCount const/$sh:maxCount)
(def $sh:property const/$sh:property)



(def _predicate$type:string const/_predicate$type:string)
(def _predicate$type:ref const/_predicate$type:ref)
(def _predicate$type:boolean const/_predicate$type:boolean)
(def _predicate$type:instant const/_predicate$type:instant)
(def _predicate$type:uuid const/_predicate$type:uuid)
(def _predicate$type:uri const/_predicate$type:uri)
(def _predicate$type:bytes const/_predicate$type:bytes)
(def _predicate$type:int const/_predicate$type:int)
(def _predicate$type:long const/_predicate$type:long)
(def _predicate$type:bigint const/_predicate$type:bigint)
(def _predicate$type:float const/_predicate$type:float)
(def _predicate$type:double const/_predicate$type:double)
(def _predicate$type:bigdec const/_predicate$type:bigdec)
(def _predicate$type:tag const/_predicate$type:tag)
(def _predicate$type:json const/_predicate$type:json)
(def _predicate$type:geojson const/_predicate$type:geojson)
(def _predicate$type:date const/_predicate$type:date)
(def _predicate$type:time const/_predicate$type:time)
(def _predicate$type:dateTime const/_predicate$type:dateTime)
(def _predicate$type:duration const/_predicate$type:duration)

(def _rule$ops:all const/_rule$ops:all)
(def _rule$ops:transact const/_rule$ops:transact)
(def _rule$ops:query const/_rule$ops:query)
(def _rule$ops:logs const/_rule$ops:logs)
(def _rule$ops:token const/_rule$ops:token)

(def _setting$consensus:raft const/_setting$consensus:raft)
(def _setting$consensus:pbft const/_setting$consensus:pbft)

(def _auth$type:secp256k1 const/_auth$type:secp256k1)
(def _auth$type:password-secp256k1 const/_auth$type:password-secp256k1)

(def _setting$language:ar const/_setting$language:ar)
(def _setting$language:bn const/_setting$language:bn)
(def _setting$language:br const/_setting$language:br)
(def _setting$language:cn const/_setting$language:cn)
(def _setting$language:en const/_setting$language:en)
(def _setting$language:es const/_setting$language:es)
(def _setting$language:fr const/_setting$language:fr)
(def _setting$language:hi const/_setting$language:hi)
(def _setting$language:id const/_setting$language:id)
(def _setting$language:ru const/_setting$language:ru)
